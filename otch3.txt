Процессы в ОС GNU/Linux
Каждый процесс имеет свой собственный идентификатор.
Получить значение идентификатора процесса можно при помощи системного вызова getpid()
Идентификатор родительского процесса возвращается системным вызовом getppid()

Программа, выводящая на экран идентификаторы текущего и родительского процессов:

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t prid, parentprid;
        prid = getpid();
        parentprid=getppid();
        printf("Id текущего процесса: %d\nId родительского процесса: %d\n", prid, parentprid);
        return 0;
}

evdokimov@alexandr-Aspire-Z5751:~/OS_25$ ps
    PID TTY          TIME CMD
  12467 pts/4    00:00:00 bash
  13753 pts/4    00:00:00 ps
evdokimov@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
evdokimov@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out
Id текущего процесса: 14428
Id родительского процесса: 12467

Родительским процессом для запущенной программы является командная оболочка bash, поэтому ее id совпадает с id родительского процесса

evdokimov@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Id текущего процесса: 14735
Id родительского процесса: 12467

После вторичного запуска программы меняется id текущего процесса, так как предыдущий процесс уже завершился
